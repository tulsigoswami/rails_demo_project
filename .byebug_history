exit
c
  endc
      user.update(first_name:full_name[0],last_name:full_name[1])
      full_name = user.name.split(" ")
 User.all.each do |user|
      user.update(first_name:full_name[0],last_name:full_name[1])
      full_name = user.name.split(" ")
User.all.each do |user|
      user.update(first_name:full_name[0],last_name:full_name[1])
      full_name = user.name.split(" ")
  endUser.all.each do |user|
      user.update(first_name:full_name[0],last_name:full_name[1])
      full_name = user.name.split(" ")
  endUser.all.each do |user|
      user.update(first_name:full_name[0],last_name:full_name[1])
      full_name = user.name.split(" ")
User.all.each do |user|
full_name.class
full_name
full_name = user.name.split(" ")
full_name
ful_name
user.name.split(" ")
user.name
user
User
full_name
c
user.update(first_name:full_name[0],last_name:full_name[1])
user.update(first_name:full_name[0],last_name:full_name[1]).valid?
user.update(first_name:full_name[0],last_name:full_name[1]).errors
a.errors
a = user.update(first_name:full_name[0],last_name:full_name[1])
user.update(first_name:full_name[0],last_name:full_name[1])
self.errors
full_name[1]
full_name[0]
full_name
full_name.empty?
c
u.errors.full_messages
u.errors.class
u = User.create(user_params)
c
u.errors
u.errors.full_messages
u = User.create(user_params)
@user.errors.full_messages
@user.errors
User.new(user_params)
@user
c
Comment.find(id:params[:comment_id]).exists?
c
@current_user.followees.find_by(id:@recipe.user_id)
c
@current_user.followees.find_by(id:@recipe.user_id)
followee
c
@current_user.followees.find_by(id:@recipe.user_id)
followee
c
follwee
followee
folowee
c
params
params[:id]
params
continue
bt 27
@user.errors.messages
@user.nil?
