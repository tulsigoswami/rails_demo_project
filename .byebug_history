c
response.status
response.message
response
c
JSON
json
response.body.message
response.message
response.body
post :create, params: { first_name:Faker::Name.initials(number: 5) , last_name: Faker::Name.initials(number: 5), email:"#{Faker::Name.initials(number: 5)}@gmail.com", password: "12ASfeffe%34" }
c
response.body
response.status
post :create, params: {first_name: "@#w", last_name:"abcd"}
c
response.status
response.body
response
post :create, params: {first_name: "@#w", last_name:"abcd"}
c
C
 @user = User.new(C)
 @user = User.new(user_params)
user_params
user_paramss
c
response.status
response.body
post :create, params: { first_name:Faker::Name.initials(number: 5) , last_name: Faker::Name.initials(number: 5), email:"#{Faker::Name.initials(number: 5)}@gmail.com" , password: "Ab#@113rjij"}
c
response.body
post :create, params: { first_name:Faker::Name.initials(number: 5) , last_name: Faker::Name.initials(number: 5), email:"#{Faker::Name.initials(number: 5)}@gmail.com" , password: "Ab#@113rjij"}
post :create #, params: { first_name:Faker::Name.initials(number: 5) , last_name: Faker::Name.initials(number: 5), email:"#{Faker::Name.initials(number: 5)}@gmail.com" , password: "Ab#@113rjij"}
post :create #, params: { data: { attributes: { first_name:Faker::Name.initials(number: 5) , last_name: Faker::Name.initials(number: 5), email:"#{Faker::Name.initials(number: 5)}@gmail.com" }}}
post :create #, params: { data: { attributes: { first_name:Faker::Name.initials(number: 5) , last_name: Faker::Name.initials(number: 5), email:"#{Faker::Name.initials(number: 5)}@gmail.com" } } }
response
response.body
c
response.body
post :create, params: { first_name: Faker::Name.initials(number: 5) , last_name: Faker::Name.initials(number: 5), email:"#{Faker::Name.initials(number: 5)}@gmail.com" }
c
response.body
post :create, params: { data: { attributes: { first_name: Faker::Name.initials(number: 5) , last_name: Faker::Name.initials(number: 5), email:"#{Faker::Name.initials(number: 5)}@gmail.com" } } }
response.body
post :create, params: { data: { attributes: { first_name:Faker::Name.initials(number: 5) , last_name: Faker::Name.initials(number: 5), email:"#{Faker::Name.initials(number: 5)}@gmail.com" } } }
c
response.body
post :create, params: { data: { attributes: { first_name: Faker::Lorem.characters(number: 5), last_name:Faker::Lorem.characters(number: 5), email: Faker::Internet.free_email + Random.hex(3) } } }
c
first_name
post :create, params: { data: { attributes: { first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, email: Faker::Internet.free_email + Random.hex(3) } } }
response.body
post :create, params: { data: { attributes: { first_name: Faker::Name.first_name, last_name: Faker::Name.last_name, email: Faker::Internet.free_email + Random.hex(3) } } }
c
n
response.body
post :create, params: { data: { attributes: { first_name: "khushig", last_name:"gpuri", email:"khushig@gmail.com" } } }
exit
post :create, params{ "first_name": "khushig", "last_name": "gpuri", "email": "khushig@gmail.com" }exit
post :create, params{ "first_name": "khushig", "last_name": "gpuri", "email": "khushig@gmail.com" }
post :create, params{ first_name: 'khushig', last_name: "gpuri", email: "khushig@gmail.com" }
post :create, params{ first_name: "khushig", last_name: "gpuri", email: "khushig@gmail.com" }
post :create, params{first_name: "khushig", last_name:"gpuri", email:"khushig@gmail.com"}
response.body
post :create
c
post :create
let(:user) { FactoryBot.create(:user, first_name: "khushig", last_name:"gpuri", email:"khushig@gmail.com") }
c
self
factory :user do
first_name
sequence (:first_name) { |n| "Name#{n}" }
c
post :create
let(:user1) { create(:user, type: 'Admin') }
user
c
object
self
response
user1.valid?
user1
let(:user1) { create(:user, type: 'Admin') }
c
user.first_name
let(:user) { create(:user) }
user
c
params
c
accounts = Account.where(category_id:params[:category_id])
params[:category_id]
c
self.password_digest = password
pass
 pass = BCrypt::Password.create(password)
self.reset_password_token = nil
c
self.password=a
a = BCrypt::Password.create(password)
a = Password.create(password)
self.password = password
password
c
C
BCrypt.Password.create('password')
BCrypt.password.create('password')
password
 n
self.password_digest
a
a  = self.update(password_digest:password)
self.update(password_digest:password)
self.password_digest = password
self.reset_password_token = nil
password
 c
@user.password_digest
@user = User.find_by_email(params[:email])
c
@recipe.user.followers.pluck(:email)
a.email
a = @recipe.user.followers
@recipe.user.followers.email
@recipe.user.followers
@recipe.user.followers.email
@recipe.user.email
@recipe.user
@recipe
 @recipe= params[:recipe]
@recipe.user_id
@recipe.user
@recipe.user.followers
@recipe.user.followers.email
c
@recipe.user.followers.email
@recipe.user.followers
@recipe.user
@recipe.user_id
 @recipe= params[:recipe]
c
@recipe.content
@recipe<<@recipe.content
@recipe= params[:recipe]
c
@recipe.content
@recipe= params[:recipe]
c
C
@recipe= params[:@recipe]
c
@recipe.save!
@recipe.errors.full_messages
@recipe.errors.messages
@recipe.errors
r.errors.full_messa
r = @recipe.save
@recipe.save
@recipe
c
user.update(first_name:full_name[0],last_name:full_name[1])
user.update(first_name:full_name[0],last_name:full_name[1]).valid?
user.update(first_name:full_name[0],last_name:full_name[1]).errors
a.errors
a = user.update(first_name:full_name[0],last_name:full_name[1])
user.update(first_name:full_name[0],last_name:full_name[1])
self.errors
full_name[1]
full_name[0]
full_name
full_name.empty?
c
u.errors.full_messages
u.errors.class
u = User.create(user_params)
c
u.errors
u.errors.full_messages
u = User.create(user_params)
@user.errors.full_messages
@user.errors
User.new(user_params)
@user
c
Comment.find(id:params[:comment_id]).exists?
c
@current_user.followees.find_by(id:@recipe.user_id)
c
@current_user.followees.find_by(id:@recipe.user_id)
followee
c
@current_user.followees.find_by(id:@recipe.user_id)
followee
c
follwee
followee
folowee
c
params
params[:id]
params
continue
bt 27
@user.errors.messages
@user.nil?
